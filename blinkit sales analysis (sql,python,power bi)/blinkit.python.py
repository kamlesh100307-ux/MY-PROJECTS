# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jMQQzGn7NfX6iAwPy0ayHVAo6ekM1mHx
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df= pd.read_csv('/content/BlinkIT_Grocery_Data_Converted.csv')

df.head(20)

df.info()

df.fillna(0,inplace=True)

df.info()

print("size of data: ", df.shape)

df.columns

df.dtypes



df['Item Fat Content'] = df['Item Fat Content'].replace({
    'low fat': 'Low Fat',
    'lf': 'Low Fat',
    'reg': 'Regular',
    'LF': 'Low Fat'
})

print(df['Item Fat Content'].unique())

#KPIS

total_sales = df['Sales'].sum()
print(f"total_sales:${total_sales:,.1f}")

average_sales = df['Sales'].mean()
print(f"average_sales:${average_sales:,.1f}")

no_of_items= df['Sales'].count()
print("no_of_items:",no_of_items)

average_rating = df['Rating'].mean()
print(f"average_rating: {average_rating:,.2f}")

######charts for further topics

sales_by_fat_content= df.groupby('Item Fat Content')['Sales'].sum()

sales_by_fat_content= df.groupby('Item Fat Content')['Sales'].sum()
plt.figure(figsize=(7,7))
plt.pie(sales_by_fat_content,labels=sales_by_fat_content.index,autopct='%.1f%%',startangle=90)
plt.title('Sales by Fat Content')
plt.show()

sales_by_item = df.groupby('Item Type')['Sales'].sum().sort_values(ascending=False)

# Plot
plt.figure(figsize=(10,6))
bars = plt.bar(sales_by_item.index, sales_by_item.values, color='skyblue')

# Add value labels on top of bars
for bar in bars:
    height = bar.get_height()
    plt.text(
        bar.get_x() + bar.get_width()/2, height,
        f'{height:,.0f}',  # format without decimals
        ha='center', va='bottom'
    )

# Labels and title
plt.xlabel('Item Type')
plt.ylabel('Total Sales')
plt.title('Total Sales by Item Type')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

grouped= df.groupby(['Outlet Location Type','Item Fat Content'])['Sales'].sum().unstack()
grouped= grouped[['Regular','Low Fat']]

ax = grouped.plot(kind='bar', figsize=(10,6), title='Sales by Fat Content and Outlet Type')
plt.xlabel('Outlet Type')
plt.ylabel('Total Sales')
plt.legend(title='Item Fat Content')

for bar in ax.containers:
    ax.bar_label(bar, fmt='%.0f', label_type='edge')


plt.show()

grouped = df.groupby('Outlet Establishment Year')['Sales'].sum().reset_index()

plt.figure(figsize=(10, 6))
plt.plot(grouped['Outlet Establishment Year'], grouped['Sales'],
         marker='o', markersize=8, color='skyblue', linewidth=2)

# Add value labels (rounded)
for x, y in zip(grouped['Outlet Establishment Year'], grouped['Sales']):
    plt.text(x, y, str(round(y, 2)), ha='center', va='bottom', fontsize=10)

plt.title('Total Sales by Outlet Establishment Year', fontsize=14)
plt.xlabel('Outlet Establishment Year', fontsize=12)
plt.ylabel('Total Sales', fontsize=12)

plt.tight_layout()
plt.show()

plt.figure(figsize=(4, 4))

plt.pie(
    df.groupby('Outlet Size')['Sales'].sum().values,          # numeric values
    labels=df.groupby('Outlet Size')['Sales'].sum().index,    # labels
    autopct='%1.1f%%',
    startangle=90
)

plt.title('Sales by Outlet Size')
plt.tight_layout()
plt.show()

sales_by_location = df.groupby('Outlet Location Type')['Sales'].sum().reset_index()

# Create horizontal bar plot
plt.figure(figsize=(6, 4))
sns.barplot(
    data=sales_by_location,
    x='Sales',
    y='Outlet Location Type',
    palette='viridis'
)

# Add value labels
for index, value in enumerate(sales_by_location['Sales']):
    plt.text(value, index, f'{value:,.0f}', va='center')

plt.title('Sales by Outlet Location Type')
plt.xlabel('Total Sales')
plt.ylabel('Outlet Location Type')
plt.tight_layout()
plt.show()

